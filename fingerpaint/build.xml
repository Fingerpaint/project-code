<?xml version="1.0"?>
<project name="Fingerpaint" basedir="." default="jar">
 
	<property name="package.prefix" value="nl.tue.fingerpaint" />
	<property name="package.dir.prefix" value="nl/tue/fingerpaint" />
    <property name="gwt.module.name" value="Fingerpaint" />
	<property name="gwt.module.name.dir" value="fingerpaint" />
    <property name="src.dir" value="src" />
    <property name="build.dir" value="build" />
    <property name="lib.dir" value="lib" />
	<property name="server.lib.dir" value="${lib.dir}/server" />
	<property name="client.lib.dir" value="${lib.dir}/client" />
	<property name="gwt.lib.dir" value="lib/gwt" />
    
    <path id="server.classpath">       
        <fileset dir="${server.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>
	
    <path id="gwt.classpath">
        <fileset dir="${gwt.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
    	<pathelement location="${src.dir}" />
    	
    </path>
	
	<path id="client.src.classpath">       
	    <fileset dir="${gwt.lib.dir}">
	        <include name="**/*.jar" />
	    </fileset>
	</path>
    
    <target name="prepare" description="prepare the build dir">
        <mkdir dir="${build.dir}"/>
    	<mkdir dir="${build.dir}/war/WEB-INF/classes" />
    	<mkdir dir="${build.dir}/war/WEB-INF/lib" />
    	<mkdir dir="${build.dir}/native" />
    </target>
   
    <target name="clean" description="remove the build dir">
        <delete dir="${build.dir}" />
    </target>
	
	<target name="native-with-java-home" depends="prepare" if="java.jdk.home" 
		unless="no.native">
		<echo message="Java home: ${java.home}" />
	    <exec executable="make" dir=".">
	        <arg value="all" />
	    	<env key="JAVA_HOME" path="${java.jdk.home}"/>
	    </exec>
	</target>
	
	<condition property="no.native.or.java.home">
	    <or>
	    	<isset property="no.native" />
	    	<isset property="java.jdk.home" />
	    </or>
	</condition>
	
	<target name="native" depends="prepare" unless="no.native.or.java.home">
	    <exec executable="make" dir=".">
	    	<arg value="all" />
	    </exec>
	</target>
	
	<target name="server-compile" depends="native, native-with-java-home">       
	    <javac srcdir="${src.dir}" destdir="${build.dir}/war/WEB-INF/classes" includeantruntime="false">
	    	<include name="${package.dir.prefix}/server/**" />
	    	<include name="${package.dir.prefix}/shared/**" />
	        <classpath refid="server.classpath" />
	    </javac>
		<copy todir="${build.dir}/war/WEB-INF/lib">
		    <fileset dir="${server.lib.dir}"/>
		</copy>
		<copy todir="${build.dir}/war/WEB-INF/">
		    <fileset dir="${src.dir}/${package.dir.prefix}/private"/>
		</copy>
	</target>

    <target name="gwt-compile" depends="server-compile">
    	<condition property="gwt.args" value="">
    	   <not>  
    	      <isset property="gwt.args"/>
    	   </not>
    	</condition>
        <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
            <classpath>
                <path refid="gwt.classpath" />
            </classpath>
            <jvmarg value="-Xmx256M"/>
        	<arg line="-strict" />
        	<arg line="-war" />
        	<arg value="${build.dir}/war" />
        	<arg line="-deploy" />
        	<arg value="${build.dir}/deploy" />
        	<arg line="-extra" />
        	<arg value="${build.dir}/extra" />
        	<arg line="-optimize" />
        	<arg value="9" />
        	<arg line="${gwt.args}" />
        	<arg value="${package.prefix}.${gwt.module.name}" />
         </java>
        <copy todir="${build.dir}/war/${gwt.module.name.dir}">
            <fileset dir="${client.lib.dir}"/>
        </copy>
     </target>

    <target name="war" depends="gwt-compile"
    	description="Create a deployable war file">
        <war basedir="${build.dir}/war" destfile="${build.dir}/jetty-container/${gwt.module.name.dir}.war" 
        	webxml="${build.dir}/war/WEB-INF/web.xml">
        </war>
    </target>
	
	<target name="jar" depends="gwt-compile" 
		description="Create one executable jarfile.">
		<ant antfile="../jetty-container/build.xml" inheritall="false" 
			useNativeBasedir="true" target="jar">
			<property name="war.dir" location="${build.dir}/war" />
			<property name="jar.dir" location="." />
			<property name="jar.name" value="${gwt.module.name}.jar" />
		</ant>
	</target>
</project>